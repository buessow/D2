package com.buessow.dex.g4;

import org.junit.Test;

import java.io.ByteArrayInputStream;

import static org.junit.Assert.*;
/**
 * Created by buessow on 6/6/16.
 */
public class PacketTest {
  @Test
  public void format_simple() throws Exception {
    assertArrayEquals(
        new byte[] { 0x01, 0x06, 0x00,  0x0b, 0x7f, 0x75 },
        new Packet(Command.READ_FIRMWARE_HEADER).format());
  }

  @Test
  public void read_simple() throws Exception {
    ByteArrayInputStream in = new ByteArrayInputStream(
        new byte[] { 0x01, 0x06, 0x00,  0x0b, 0x7f, 0x75 });
    Packet packet = new Packet(in);
    assertEquals(Command.READ_FIRMWARE_HEADER.getCode(), packet.getCommand());
    assertEquals("", packet.getDataAsString());
  }

  @Test
  public void read_readFirmwareHeaderResponse() throws Exception {
    ByteArrayInputStream in = new ByteArrayInputStream(new byte[]{
        (byte)0x01, (byte)0x03, (byte)0x01, (byte)0x01, (byte)0x3c, (byte)0x46,
        (byte)0x69, (byte)0x72, (byte)0x6d, (byte)0x77, (byte)0x61, (byte)0x72,
        (byte)0x65, (byte)0x48, (byte)0x65, (byte)0x61, (byte)0x64, (byte)0x65,
        (byte)0x72, (byte)0x20, (byte)0x53, (byte)0x63, (byte)0x68, (byte)0x65,
        (byte)0x6d, (byte)0x61, (byte)0x56, (byte)0x65, (byte)0x72, (byte)0x73,
        (byte)0x69, (byte)0x6f, (byte)0x6e, (byte)0x3d, (byte)0x27, (byte)0x31,
        (byte)0x27, (byte)0x20, (byte)0x41, (byte)0x70, (byte)0x69, (byte)0x56,
        (byte)0x65, (byte)0x72, (byte)0x73, (byte)0x69, (byte)0x6f, (byte)0x6e,
        (byte)0x3d, (byte)0x27, (byte)0x32, (byte)0x2e, (byte)0x32, (byte)0x2e,
        (byte)0x30, (byte)0x2e, (byte)0x30, (byte)0x27, (byte)0x20, (byte)0x54,
        (byte)0x65, (byte)0x73, (byte)0x74, (byte)0x41, (byte)0x70, (byte)0x69,
        (byte)0x56, (byte)0x65, (byte)0x72, (byte)0x73, (byte)0x69, (byte)0x6f,
        (byte)0x6e, (byte)0x3d, (byte)0x27, (byte)0x32, (byte)0x2e, (byte)0x34,
        (byte)0x2e, (byte)0x30, (byte)0x2e, (byte)0x30, (byte)0x27, (byte)0x20,
        (byte)0x50, (byte)0x72, (byte)0x6f, (byte)0x64, (byte)0x75, (byte)0x63,
        (byte)0x74, (byte)0x49, (byte)0x64, (byte)0x3d, (byte)0x27, (byte)0x47,
        (byte)0x34, (byte)0x52, (byte)0x65, (byte)0x63, (byte)0x65, (byte)0x69,
        (byte)0x76, (byte)0x65, (byte)0x72, (byte)0x27, (byte)0x20, (byte)0x50,
        (byte)0x72, (byte)0x6f, (byte)0x64, (byte)0x75, (byte)0x63, (byte)0x74,
        (byte)0x4e, (byte)0x61, (byte)0x6d, (byte)0x65, (byte)0x3d, (byte)0x27,
        (byte)0x44, (byte)0x65, (byte)0x78, (byte)0x63, (byte)0x6f, (byte)0x6d,
        (byte)0x20, (byte)0x47, (byte)0x34, (byte)0x20, (byte)0x52, (byte)0x65,
        (byte)0x63, (byte)0x65, (byte)0x69, (byte)0x76, (byte)0x65, (byte)0x72,
        (byte)0x27, (byte)0x20, (byte)0x53, (byte)0x6f, (byte)0x66, (byte)0x74,
        (byte)0x77, (byte)0x61, (byte)0x72, (byte)0x65, (byte)0x4e, (byte)0x75,
        (byte)0x6d, (byte)0x62, (byte)0x65, (byte)0x72, (byte)0x3d, (byte)0x27,
        (byte)0x53, (byte)0x57, (byte)0x31, (byte)0x30, (byte)0x33, (byte)0x32,
        (byte)0x34, (byte)0x27, (byte)0x20, (byte)0x46, (byte)0x69, (byte)0x72,
        (byte)0x6d, (byte)0x77, (byte)0x61, (byte)0x72, (byte)0x65, (byte)0x56,
        (byte)0x65, (byte)0x72, (byte)0x73, (byte)0x69, (byte)0x6f, (byte)0x6e,
        (byte)0x3d, (byte)0x27, (byte)0x32, (byte)0x2e, (byte)0x30, (byte)0x2e,
        (byte)0x31, (byte)0x2e, (byte)0x31, (byte)0x33, (byte)0x32, (byte)0x27,
        (byte)0x20, (byte)0x50, (byte)0x6f, (byte)0x72, (byte)0x74, (byte)0x56,
        (byte)0x65, (byte)0x72, (byte)0x73, (byte)0x69, (byte)0x6f, (byte)0x6e,
        (byte)0x3d, (byte)0x27, (byte)0x34, (byte)0x2e, (byte)0x36, (byte)0x2e,
        (byte)0x34, (byte)0x2e, (byte)0x34, (byte)0x35, (byte)0x27, (byte)0x20,
        (byte)0x52, (byte)0x46, (byte)0x56, (byte)0x65, (byte)0x72, (byte)0x73,
        (byte)0x69, (byte)0x6f, (byte)0x6e, (byte)0x3d, (byte)0x27, (byte)0x31,
        (byte)0x2e, (byte)0x30, (byte)0x2e, (byte)0x30, (byte)0x2e, (byte)0x32,
        (byte)0x37, (byte)0x27, (byte)0x20, (byte)0x44, (byte)0x65, (byte)0x78,
        (byte)0x42, (byte)0x6f, (byte)0x6f, (byte)0x74, (byte)0x56, (byte)0x65,
        (byte)0x72, (byte)0x73, (byte)0x69, (byte)0x6f, (byte)0x6e, (byte)0x3d,
        (byte)0x27, (byte)0x33, (byte)0x27, (byte)0x2f, (byte)0x3e, (byte)0x14,
        (byte)0x7e});
    assertEquals(0x103, in.available());
    Packet packet = new Packet(in);
    assertEquals(Command.ACK.getCode(), packet.getCommand());
    assertEquals(
        "<FirmwareHeader SchemaVersion='1' ApiVersion='2.2.0.0' TestApiVersion='2.4.0.0' " +
            "ProductId='G4Receiver' ProductName='Dexcom G4 Receiver' SoftwareNumber='SW10324' " +
            "FirmwareVersion='2.0.1.132' PortVersion='4.6.4.45' RFVersion='1.0.0.27' " +
            "DexBootVersion='3'/>",
        packet.getDataAsString());
  }
}
